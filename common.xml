<?xml version="1.0"?>
<!DOCTYPE project>
<project name="common">
	
    <!-- initialize ENV variable -->
    <property environment="env" />
    
    <!-- initialize file based common properties -->
    <property file="${build.dir}/common.default.properties"/>
    <property file="${build.dir}/common.${os.family}.properties"/>
	
    <!-- initialize the common properties -->
    <property name="php-src.dir" value="${basedir}/src" />
    <property name="php-test.dir" value="${basedir}/tests" />
    <property name="php-target.dir" value="${basedir}/target"/>
    <property name="unique.name" value="${codepool}/${ant.project.name}" />
    
    <!-- ==================================================================== -->
    <!-- Deletes the directory with the generated artefacts                   -->
    <!-- ==================================================================== -->
    <target name="clean" description="Deletes the directory with the generated artefacts.">
        <delete dir="${php-target.dir}" includeemptydirs="true" quiet="false" verbose="true" failonerror="true"/>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Prepares the directory to temporarily store generated artefacts      -->
    <!-- ==================================================================== -->
    <target name="prepare" depends="clean" description="Prepares the directory to temporarily store generated artefacts.">
        <mkdir dir="${php-target.dir}" />
        <mkdir dir="${php-target.dir}/reports" />
        <mkdir dir="${php-target.dir}/reports/coverage" />
    </target>
    
    <!-- ==================================================================== -->
    <!-- Copies the sources to the temporary directory                        -->
    <!-- ==================================================================== -->
    <target name="copy" depends="prepare" description="Copies the sources to the temporary directory.">
        <copy todir="${php-target.dir}/${unique.name}/src" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-src.dir}">
                <include name="**/*" />
            </fileset>
        </copy>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Copies the sources to the deploy directory                           -->
    <!-- ==================================================================== -->
    <target name="deploy" description="Copies the sources to the deploy directory.">
        <antcall target="prepare" />
        <antcall target="copy" />
        <copy todir="${deploy.dir}" preservelastmodified="true" overwrite="true">
            <fileset dir="${php-target.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Generates the API documentation                                      -->
    <!-- ==================================================================== -->   
    <target name="apidoc" description="Generates the API documentation.">
         <exec executable="${vendor.dir}/bin/phpdoc" dir="${basedir}">  
            <arg line="-ct type -ue on -s on -t ${php-target.dir}/docs -o HTML:frames:earthli -d ${php-src.dir}"/>  
         </exec>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Runs the code sniffer and generates a report                         -->
    <!-- ==================================================================== -->
    <target name="phpcs" description="Runs the code sniffer and generates a report.">
        <exec executable="${vendor.dir}/bin/phpcs" dir="${basedir}" failonerror="true">
            <arg line="-n --extensions=php --standard=${coding.standard} ."/>
        </exec>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Runs the copy and paste detection                                    -->
    <!-- ==================================================================== -->
    <target name="phpcpd" description="Runs the copy and paste detection.">
        <exec executable="${vendor.dir}/bin/phpcpd" dir="${basedir}">
            <arg line="--log-pmd ${php-target.dir}/reports/pmd-cpd.xml ${php-src.dir}"/>
        </exec>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Generate phploc.csv                                                  -->
    <!-- ==================================================================== -->
    <target name="phploc" description="Generate phploc.csv">
        <exec executable="${vendor.dir}/bin/phploc" dir="${basedir}" failonerror="true">
            <arg line="--log-xml ${php-target.dir}/reports/phploc.xml ${php-src.dir}"/>
        </exec>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Runs the PHPDepend tool and generats a graphs                        -->
    <!-- ==================================================================== -->
    <target name="pdepend" description="Runs the PHPDepend tool and generats a graphs.">
        <exec executable="${vendor.dir}/bin/pdepend" dir="${basedir}" failonerror="true">
            <arg line="--summary-xml=${php-target.dir}/reports/pdepend.xml
                       --jdepend-xml=${php-target.dir}/reports/jdepend.xml
                       --jdepend-chart=${php-target.dir}/reports/jdepend.svg
            	       --overview-pyramid=${php-target.dir}/reports/pdepend-pyramid.svg ${php-src.dir}" />
        </exec>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Runs the PHP mess detector tool                                      -->
    <!-- ==================================================================== -->
    <target name="phpmd" description="Runs the PHP Mess detector tool.">
        <exec executable="${vendor.dir}/bin/phpmd" dir="${basedir}" failonerror="true">
            <arg line="${php-src.dir} xml codesize,unusedcode --reportfile ${php-target.dir}/reports/pmd.xml" />
        </exec>
    </target>

    <!-- ==================================================================== -->
    <!-- Runs the PHPUnit tests on Travis-CI and generates a report           -->
    <!-- ==================================================================== -->
    <target name="run-tests" description="Runs the PHPUnit tests on Travis-CI and generates a report.">
    	<antcall target="composer-install"/>
        <exec executable="${vendor.dir}/bin/phpunit" dir="${basedir}" failonerror="true">
            <arg line="--bootstrap bootstrap.php --configuration phpunit.xml" />
        </exec>
    </target>
    
    <!-- ==================================================================== -->
    <!-- Builds the library                                                   -->
    <!-- ==================================================================== -->
    <target name="build" description="Builds the library.">
        <antcall target="phpcs" />
        <antcall target="apidoc" />
        <antcall target="phpcpd" />
        <antcall target="phploc" />
        <antcall target="pdepend" />
        <antcall target="phpmd" />
        <antcall target="run-tests" />
    </target>
    
</project>